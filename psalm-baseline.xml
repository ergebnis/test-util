<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="4.17.0@6f4707aa41c9174353a6434bba3fc8840f981d9c">
  <file src="src/Helper.php">
    <DeprecatedMethod occurrences="16">
      <code>self::assertClassExists($className)</code>
      <code>self::assertClassExists($className)</code>
      <code>self::assertClassExists($className)</code>
      <code>self::assertClassExists($className)</code>
      <code>self::assertClassExists($className)</code>
      <code>self::assertClassExists($className)</code>
      <code>self::assertClassExists($parentClassName)</code>
      <code>self::assertInterfaceExists($interfaceName)</code>
      <code>self::assertInterfaceExists($interfaceName)</code>
      <code>self::assertInterfaceExists($interfaceName)</code>
      <code>self::assertInterfaceExists($parentInterfaceName)</code>
      <code>self::assertTraitExists($traitName)</code>
      <code>self::assertTraitExists($traitName)</code>
      <code>self::provideDataForValues($filtered)</code>
      <code>self::provideDataForValues($filtered)</code>
    </DeprecatedMethod>
    <MissingClosureParamType occurrences="2">
      <code>$excludeClassyName</code>
      <code>$excludeClassyName</code>
    </MissingClosureParamType>
    <MixedAssignment occurrences="1">
      <code>$value</code>
    </MixedAssignment>
    <UnnecessaryVarAnnotation occurrences="7">
      <code>class-string</code>
      <code>class-string</code>
      <code>class-string</code>
      <code>class-string</code>
      <code>class-string</code>
      <code>class-string</code>
      <code>class-string</code>
    </UnnecessaryVarAnnotation>
  </file>
  <file src="test/Unit/Exception/EmptyValuesTest.php">
    <DeprecatedMethod occurrences="1">
      <code>self::assertClassExtends(\InvalidArgumentException::class, EmptyValues::class)</code>
    </DeprecatedMethod>
  </file>
  <file src="test/Unit/Exception/InvalidExcludeClassNameTest.php">
    <DeprecatedMethod occurrences="1">
      <code>self::assertClassExtends(\InvalidArgumentException::class, InvalidExcludeClassName::class)</code>
    </DeprecatedMethod>
    <MixedInferredReturnType occurrences="1">
      <code>\Generator&lt;array&lt;null|array|bool|float|int|resource|\stdClass&gt;&gt;</code>
    </MixedInferredReturnType>
  </file>
  <file src="test/Unit/Exception/NonExistentDirectoryTest.php">
    <DeprecatedMethod occurrences="1">
      <code>self::assertClassExtends(\InvalidArgumentException::class, NonExistentDirectory::class)</code>
    </DeprecatedMethod>
  </file>
  <file src="test/Unit/Exception/NonExistentExcludeClassTest.php">
    <DeprecatedMethod occurrences="1">
      <code>self::assertClassExtends(\InvalidArgumentException::class, NonExistentExcludeClass::class)</code>
    </DeprecatedMethod>
  </file>
  <file src="test/Unit/HelperTest.php">
    <ArgumentTypeCoercion occurrences="16">
      <code>$className</code>
      <code>$className</code>
      <code>$className</code>
      <code>$className</code>
      <code>$className</code>
      <code>$className</code>
      <code>$excludeClassyNames</code>
      <code>$excludeClassyNames</code>
      <code>$excludeClassyNames</code>
      <code>$interfaceName</code>
      <code>$interfaceName</code>
      <code>$interfaceName</code>
      <code>$parentClassName</code>
      <code>$parentInterfaceName</code>
      <code>$traitName</code>
      <code>$traitName</code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod occurrences="73">
      <code>self::assertClassExists($className)</code>
      <code>self::assertClassExists($className)</code>
      <code>self::assertClassIsAbstract($className)</code>
      <code>self::assertClassIsAbstract($className)</code>
      <code>self::assertClassIsAbstract($className)</code>
      <code>self::assertClassIsFinal($className)</code>
      <code>self::assertClassIsFinal($className)</code>
      <code>self::assertClassIsFinal($className)</code>
      <code>self::assertClassesAreAbstractOrFinal($directory)</code>
      <code>self::assertClassesAreAbstractOrFinal($directory)</code>
      <code>self::assertClassesAreAbstractOrFinal($directory)</code>
      <code>self::assertClassesAreAbstractOrFinal($directory)</code>
      <code>self::assertInterfaceExists($interfaceName)</code>
      <code>self::assertInterfaceExists($interfaceName)</code>
      <code>self::assertTraitExists($traitName)</code>
      <code>self::assertTraitExists($traitName)</code>
      <code>self::provideDataForValues($values)</code>
      <code>self::provideDataForValues($values)</code>
    </DeprecatedMethod>
    <InvalidReturnType occurrences="1">
      <code>\Generator&lt;string, array&lt;string&gt;&gt;</code>
    </InvalidReturnType>
    <MixedArgumentTypeCoercion occurrences="3">
      <code>$excludeClassNames</code>
      <code>$excludeClassyNames</code>
      <code>$excludeClassyNames</code>
    </MixedArgumentTypeCoercion>
    <MixedInferredReturnType occurrences="1">
      <code>\Generator&lt;array&lt;string&gt;&gt;</code>
    </MixedInferredReturnType>
    <UnusedClosureParam occurrences="5">
      <code>$className</code>
      <code>$className</code>
      <code>$className</code>
      <code>$classyName</code>
      <code>$classyName</code>
    </UnusedClosureParam>
  </file>
</files>
